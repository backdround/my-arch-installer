#!/usr/bin/env bash
set -euo pipefail

############################################################
# Mandatory variables

# Path to block flashed device
device=

hostname=arch
swap_size=500M
kernel_options="rw console=ttyS0"

timezone=Europe/Moscow
locales='
  en_US.UTF-8
  ru_RU.UTF-8
'
############################################################
# Optional variables
user_name=vlad
user_password=
paswordless_sudo=false
root_password=
additional_packages=(
  linux-firmware amd-ucode intel-ucode
  iwd modemmanager
  git nano tree jq
)

mirrors='
  https://mirror.yandex.ru/archlinux/$repo/os/$arch
'

post_bash_script='\
su vlad -c bash <<EOF
set -e

intstall-deploy-configs() {
  # Changes work directory
  TEMP_DIRECTORY="$(mktemp -d)"
  cd "$TEMP_DIRECTORY"

  # Gets binary urs
  curl -o ./deploy-configs-release.json \
    https://api.github.com/repos/backdround/deploy-configs/releases/latest
  echo ".assets[] \
    | select(.name | match(\"deploy-configs-linux-amd64-.*[.]tar[.]gz\")) \
    | .browser_download_url" \
      > ./query.jq
  BINARY_URL="$(jq -r -f ./query.jq ./deploy-configs-release.json)"

  # Gets binary
  curl -L -o ./deploy-configs.tar.gz "$BINARY_URL"
  tar -xvf ./deploy-configs.tar.gz

  # Deploy binary
  mkdir -p ~/go/bin/
  mv -f ./deploy-configs ~/go/bin/

  # Cleans up
  cd - > /dev/null
  rm -rf "$TEMP_DIRECTORY"
}

intstall-deploy-configs

# Clones configuration
git clone https://github.com/backdround/configuration.git ~/configuration
cd ~/configuration

# Deploys configs
~/go/bin/deploy-configs INSTANCE_HERE || {
  echo "Error occurs while deploying configs"
}

# Configurates system
./init.sh POSSIBLE_PASSWORD_HERE
EOF
'
